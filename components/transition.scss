/**


****/

/******************************************************************************************************************
  TRANSITION
  --
*******************************************************************************************************************/


/*== Transitions*/

@mixin trans-all($time){
  -moz-transition: $time all; -webkit-transition: $time all;
  -o-transition: $time all; transition: $time all;
}

/*
This transforms an element based on the delay time specified
*/
@for $k from 1 through 5{
    .trns-all-#{$k}s{
      @include trans-all(#{$k}s);
    }
}





//ease        - specifies a transition effect with a slow start, then fast, then end slowly (this is default)
//linear      - specifies a transition effect with the same speed from start to end
//ease-in     - specifies a transition effect with a slow start
//ease-out    - specifies a transition effect with a slow end
//ease-in-out - specifies a transition effect with a slow start and end

$trans-timing-func:('ease','linear','ease-in','ease-out','ease-in-out','out-back',
'out-sine','quad','cubic','force','warm-up','palpitate');
//Custom Transitions
// 1. Force -> cubic-bezier(0, 1.32, 0, 0.87)
// 2. warm-up -> cubic-bezier(1, 0.08, 0.98,-0.38)
// 3. palpitate -> cubic-bezier(0.9,-0.74, 0.98,-0.38)

@mixin trans-trans-all($time,$trans){
  -moz-transition: $time $trans all; -webkit-transition: $time $trans all;
  -o-transition: $time $trans all; transition: $time $trans all;
}

//
/*
  This transforms an element based on the delay time specified & transition-timing-function
*/

@for $k from 1 through 5{
  @each $c in $trans-timing-func{
    @if $c == 'out-back'{
      .trns-#{$c}-#{$k}s{
        @include trans-trans-all(#{$k}s,cubic-bezier(0.18, 0.89, 0.32, 1.28));
      }
    }
    @else if $c == 'out-sine' {
      .trns-#{$c}-#{$k}s{
        @include trans-trans-all(#{$k}s,cubic-bezier(0.39, 0.58, 0.57, 1));
      }
    }
    @else if $c == 'quad' {
      .trns-#{$c}-#{$k}s{
        @include trans-trans-all(#{$k}s,cubic-bezier(0.25, 0.46, 0.45, 0.94));
      }
    }
    @else if $c == 'cubic' {
      .trns-#{$c}-#{$k}s{
        @include trans-trans-all(#{$k}s,cubic-bezier(0.22, 0.61, 0.36, 1));
      }
    }
    @else if $c == 'force' {
      .trns-#{$c}-#{$k}s{
        @include trans-trans-all(#{$k}s,cubic-bezier(0, 1.32, 0, 0.87));
      }
    }
    @else if $c == 'palpitate'{
      .trns-#{$c}-#{$k}s{
        @include trans-trans-all(#{$k}s,cubic-bezier(0.9,-0.74, 0.98,-0.38));
      }
    }
    @else if $c == 'warm-up'{
      .trns-#{$c}-#{$k}s{
        @include trans-trans-all(#{$k}s,cubic-bezier(1, 0.08, 0.98,-0.38));
      }
    }
    @else{
      .trns-#{$c}-#{$k}s{
        @include trans-trans-all(#{$k}s,#{$c});
      }
    }
    
  }
}
